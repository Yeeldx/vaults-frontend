/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { TestStrategy, TestStrategyInterface } from "../TestStrategy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "clone",
        type: "address",
      },
    ],
    name: "Cloned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EmergencyExitEnabled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "profit",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "loss",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "debtPayment",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "debtOutstanding",
        type: "uint256",
      },
    ],
    name: "Harvested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    name: "SetDoHealthCheck",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "SetHealthCheck",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "debtThreshold",
        type: "uint256",
      },
    ],
    name: "UpdatedDebtThreshold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newKeeper",
        type: "address",
      },
    ],
    name: "UpdatedKeeper",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "delay",
        type: "uint256",
      },
    ],
    name: "UpdatedMaxReportDelay",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "metadataURI",
        type: "string",
      },
    ],
    name: "UpdatedMetadataURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "delay",
        type: "uint256",
      },
    ],
    name: "UpdatedMinReportDelay",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "profitFactor",
        type: "uint256",
      },
    ],
    name: "UpdatedProfitFactor",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "rewards",
        type: "address",
      },
    ],
    name: "UpdatedRewards",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newStrategist",
        type: "address",
      },
    ],
    name: "UpdatedStrategist",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_want",
        type: "address",
      },
    ],
    name: "_setWant",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "_takeFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "_toggleDelegation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "_toggleReentrancyExploit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "apiVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    name: "clone",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "_strategist",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewards",
        type: "address",
      },
      {
        internalType: "address",
        name: "_keeper",
        type: "address",
      },
    ],
    name: "clone",
    outputs: [
      {
        internalType: "address",
        name: "newStrategy",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "debtThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delegateEverything",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delegatedAssets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "doHealthCheck",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "doReentrancy",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyExit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "estimatedTotalAssets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amtInWei",
        type: "uint256",
      },
    ],
    name: "ethToWant",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "harvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "callCostInWei",
        type: "uint256",
      },
    ],
    name: "harvestTrigger",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "healthCheck",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "_strategist",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewards",
        type: "address",
      },
      {
        internalType: "address",
        name: "_keeper",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isOriginal",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "keeper",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxReportDelay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "metadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newStrategy",
        type: "address",
      },
    ],
    name: "migrate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "minReportDelay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "profitFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protectedToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewards",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_debtThreshold",
        type: "uint256",
      },
    ],
    name: "setDebtThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_doHealthCheck",
        type: "bool",
      },
    ],
    name: "setDoHealthCheck",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setEmergencyExit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_healthCheck",
        type: "address",
      },
    ],
    name: "setHealthCheck",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_keeper",
        type: "address",
      },
    ],
    name: "setKeeper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delay",
        type: "uint256",
      },
    ],
    name: "setMaxReportDelay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_metadataURI",
        type: "string",
      },
    ],
    name: "setMetadataURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delay",
        type: "uint256",
      },
    ],
    name: "setMinReportDelay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_profitFactor",
        type: "uint256",
      },
    ],
    name: "setProfitFactor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewards",
        type: "address",
      },
    ],
    name: "setRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_strategist",
        type: "address",
      },
    ],
    name: "setStrategist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "strategist",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "sweep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "callCostInWei",
        type: "uint256",
      },
    ],
    name: "tendTrigger",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "contract VaultAPI",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "want",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountNeeded",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "_loss",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600b805461ff0019166101001790553480156200002057600080fd5b5060405162003b8f38038062003b8f83398101604081905262000043916200050f565b808062000053813380806200005c565b50505062000748565b6006546001600160a01b031615620000915760405162461bcd60e51b8152600401620000889062000600565b60405180910390fd5b600280546001600160a01b0319166001600160a01b03868116919091179182905560408051637e062a3560e11b81529051929091169163fc0c546a91600480820192602092909190829003018186803b158015620000ee57600080fd5b505afa15801562000103573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200012991906200050f565b600680546001600160a01b0319166001600160a01b0392831617908190556200016391168560001962000240602090811b620021f917901c565b600380546001600160a01b038086166001600160a01b03199283161790925560048054858416908316178082556005805486861694169390931790925560006007819055620151806008556064600955600a5560025460405163095ea7b360e01b81529084169363095ea7b393620001e3939116916000199101620005b2565b602060405180830381600087803b158015620001fe57600080fd5b505af115801562000213573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200023991906200053f565b5050505050565b801580620002cf5750604051636eb1769f60e11b81526001600160a01b0384169063dd62ed3e9062000279903090869060040162000598565b60206040518083038186803b1580156200029257600080fd5b505afa158015620002a7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002cd919062000561565b155b620002ee5760405162461bcd60e51b81526004016200008890620006b8565b620003498363095ea7b360e01b848460405160240162000310929190620005b2565b60408051808303601f190181529190526020810180516001600160e01b0319939093166001600160e01b03938416179052906200034e16565b505050565b6060620003aa826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316620003ea60201b620022f8179092919060201c565b805190915015620003495780806020019051810190620003cb91906200053f565b620003495760405162461bcd60e51b815260040162000088906200066e565b6060620003fb848460008562000403565b949350505050565b60606200041085620004d5565b6200042f5760405162461bcd60e51b8152600401620000889062000637565b60006060866001600160a01b031685876040516200044e91906200057a565b60006040518083038185875af1925050503d80600081146200048d576040519150601f19603f3d011682016040523d82523d6000602084013e62000492565b606091505b50915091508115620004a8579150620003fb9050565b805115620004b95780518082602001fd5b8360405162461bcd60e51b8152600401620000889190620005cb565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590620003fb575050151592915050565b60006020828403121562000521578081fd5b81516001600160a01b038116811462000538578182fd5b9392505050565b60006020828403121562000551578081fd5b8151801515811462000538578182fd5b60006020828403121562000573578081fd5b5051919050565b600082516200058e81846020870162000715565b9190910192915050565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03929092168252602082015260400190565b6000602082528251806020840152620005ec81604085016020870162000715565b601f01601f19169190910160400192915050565b6020808252601c908201527f537472617465677920616c726561647920696e697469616c697a656400000000604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b60208082526036908201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60408201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000606082015260800190565b60005b838110156200073257818101518382015260200162000718565b8381111562000742576000848401525b50505050565b61343780620007586000396000f3fe608060405234801561001057600080fd5b50600436106102a05760003560e01c80638124b78e11610167578063d0511842116100ce578063efbb5cb011610087578063efbb5cb0146104fa578063f017c92f14610502578063f8c8765e14610515578063fba04a4414610528578063fbfa77cf1461053b578063fcf2d0ad14610543576102a0565b8063d05118421461049e578063d0e8577d146104b1578063d64a42e9146104c4578063d653943a146104cc578063ec38a862146104d4578063ed882c2b146104e7576102a0565b8063ac00ff2611610120578063ac00ff261461044d578063aced166114610460578063b252720b14610468578063b30db32c14610470578063c7b9d53014610478578063ce5494bb1461048b576102a0565b80638124b78e146104075780638cdfe1661461041a5780638e6350e21461042257806391397ab41461042a57806395e80c501461043d5780639ec5a89414610445576102a0565b80632e1a7d4d1161020b578063650d1880116101c4578063650d1880146103ab5780636718835f146103be5780636f392ce7146103c6578063748747e6146103ce578063750521f5146103e1578063780022a0146103f4576102a0565b80632e1a7d4d1461036557806339a172a814610378578063440368a31461038b5780634641257d1461039357806352052af81461039b5780635641ec03146103a3576102a0565b80631d12f28b1161025d5780631d12f28b1461031b5780631f1fcd51146103305780631fe4a6861461034557806322f3e2d41461034d578063258294101461035557806328b7ccf71461035d576102a0565b806301681a62146102a557806303aaab6f146102ba57806303ee438c146102d857806306fdde03146102ed5780630f969b87146102f557806311bc824514610308575b600080fd5b6102b86102b3366004612d67565b61054b565b005b6102c26106ea565b6040516102cf9190613010565b60405180910390f35b6102e06106f9565b6040516102cf919061304a565b6102e0610787565b6102b8610303366004612f1d565b6107b6565b6102b8610316366004612d67565b610843565b61032361097b565b6040516102cf9190613317565b610338610981565b6040516102cf9190612f9e565b610338610990565b6102c261099f565b6102e0610a41565b610323610a60565b610323610373366004612f1d565b610a66565b6102b8610386366004612f1d565b610ac1565b6102b8610b43565b6102b8610d6c565b6102b861127d565b6102c261129c565b6102c26103b9366004612f1d565b6112a5565b6102c26112ad565b6102c26112b6565b6102b86103dc366004612d67565b6112c4565b6102b86103ef366004612e32565b61136f565b610323610402366004612f1d565b6107b3565b610338610415366004612d67565b611406565b6103236114b1565b6103236114b7565b6102b8610438366004612f1d565b611560565b6103236115e2565b6103386115e8565b6102b861045b366004612dfa565b6115f7565b61033861171a565b610338611729565b6102b861173d565b6102b8610486366004612d67565b61175e565b6102b8610499366004612d67565b611809565b6103386104ac366004612d9f565b611957565b6102b86104bf366004612d67565b611a44565b6102c2611a66565b610338611a76565b6102b86104e2366004612d67565b611a7c565b6102c26104f5366004612f1d565b611c0f565b610323611e99565b6102b8610510366004612f1d565b611f1a565b6102b8610523366004612d9f565b611f9c565b6102b8610536366004612f1d565b611fae565b610338611fc5565b6102b8611fd4565b61055361230f565b6001600160a01b0316336001600160a01b03161461058c5760405162461bcd60e51b81526004016105839061322e565b60405180910390fd5b6006546001600160a01b03828116911614156105ba5760405162461bcd60e51b8152600401610583906130a2565b6002546001600160a01b03828116911614156105e85760405162461bcd60e51b8152600401610583906131b6565b60606105f261238c565b905060005b815181101561064d5781818151811061060c57fe5b60200260200101516001600160a01b0316836001600160a01b031614156106455760405162461bcd60e51b81526004016105839061329d565b6001016105f7565b506106e661065961230f565b6040516370a0823160e01b81526001600160a01b038516906370a0823190610685903090600401612f9e565b60206040518083038186803b15801561069d57600080fd5b505afa1580156106b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d59190612f35565b6001600160a01b03851691906123de565b5050565b600b5462010000900460ff1681565b6000805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561077f5780601f106107545761010080835404028352916020019161077f565b820191906000526020600020905b81548152906001019060200180831161076257829003601f168201915b505050505081565b6060610791610a41565b6040516020016107a19190612f69565b60405160208183030381529060405290505b90565b6003546001600160a01b03163314806107e757506107d261230f565b6001600160a01b0316336001600160a01b0316145b6108035760405162461bcd60e51b81526004016105839061322e565b600a8190556040517fa68ba126373d04c004c5748c300c9fca12bd444b3d4332e261f3bd2bac4a860090610838908390613317565b60405180910390a150565b600260009054906101000a90046001600160a01b03166001600160a01b03166388a8d6026040518163ffffffff1660e01b815260040160206040518083038186803b15801561089157600080fd5b505afa1580156108a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c99190612d83565b6001600160a01b0316336001600160a01b0316148061090057506108eb61230f565b6001600160a01b0316336001600160a01b0316145b61091c5760405162461bcd60e51b81526004016105839061322e565b7fc8db9c35f716b87af1fbb83f03c78646061931269301fd7ba6dcf189b4cdc2fc8160405161094b9190612f9e565b60405180910390a1600180546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b600a5481565b6006546001600160a01b031681565b6003546001600160a01b031681565b6002546040516339ebf82360e01b815260009182916001600160a01b03909116906339ebf823906109d4903090600401612f9e565b6101206040518083038186803b1580156109ed57600080fd5b505afa158015610a01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a259190612e9f565b604001511180610a3c57506000610a3a611e99565b115b905090565b604080518082019091526005815264302e342e3360d81b602082015290565b60085481565b6002546000906001600160a01b03163314610a935760405162461bcd60e51b815260040161058390613196565b6000610a9e836123fd565b600654909350909150610abb906001600160a01b031633836123de565b50919050565b6003546001600160a01b0316331480610af25750610add61230f565b6001600160a01b0316336001600160a01b0316145b610b0e5760405162461bcd60e51b81526004016105839061322e565b60078190556040517fbb2c369a0355a34b02ab5fce0643150c87e1c8dfe7c918d465591879f57948b190610838908390613317565b6005546001600160a01b0316331480610b6657506003546001600160a01b031633145b80610b895750610b7461230f565b6001600160a01b0316336001600160a01b0316145b80610c2a5750600260009054906101000a90046001600160a01b03166001600160a01b031663452a93206040518163ffffffff1660e01b815260040160206040518083038186803b158015610bdd57600080fd5b505afa158015610bf1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c159190612d83565b6001600160a01b0316336001600160a01b0316145b80610ccb5750600260009054906101000a90046001600160a01b03166001600160a01b03166388a8d6026040518163ffffffff1660e01b815260040160206040518083038186803b158015610c7e57600080fd5b505afa158015610c92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb69190612d83565b6001600160a01b0316336001600160a01b0316145b610ce75760405162461bcd60e51b81526004016105839061322e565b6002546040805163bf3759b560e01b81529051610d6a926001600160a01b03169163bf3759b5916004808301926020929190829003018186803b158015610d2d57600080fd5b505afa158015610d41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d659190612f35565b611954565b565b6005546001600160a01b0316331480610d8f57506003546001600160a01b031633145b80610db25750610d9d61230f565b6001600160a01b0316336001600160a01b0316145b80610e535750600260009054906101000a90046001600160a01b03166001600160a01b031663452a93206040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0657600080fd5b505afa158015610e1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3e9190612d83565b6001600160a01b0316336001600160a01b0316145b80610ef45750600260009054906101000a90046001600160a01b03166001600160a01b03166388a8d6026040518163ffffffff1660e01b815260040160206040518083038186803b158015610ea757600080fd5b505afa158015610ebb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610edf9190612d83565b6001600160a01b0316336001600160a01b0316145b610f105760405162461bcd60e51b81526004016105839061322e565b6000806000600260009054906101000a90046001600160a01b03166001600160a01b031663bf3759b56040518163ffffffff1660e01b815260040160206040518083038186803b158015610f6357600080fd5b505afa158015610f77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9b9190612f35565b600b5490915060009060ff1615610ff8576000610fb661266f565b905082811015610fd157610fca83826126f4565b9350610fe6565b82811115610fe657610fe381846126f4565b94505b610ff083856126f4565b915050611009565b6110018261273d565b919550935090505b6002546040516339ebf82360e01b81526000916001600160a01b0316906339ebf8239061103a903090600401612f9e565b6101206040518083038186803b15801561105357600080fd5b505afa158015611067573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061108b9190612e9f565b60c001516002546040516328766ebf60e21b81529192506001600160a01b03169063a1d9bafc906110c490889088908790600401613337565b602060405180830381600087803b1580156110de57600080fd5b505af11580156110f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111169190612f35565b925061112183611954565b60015460ff168015611142575060015461010090046001600160a01b031615155b156111f45760015460405163c70fa00b60e01b81526101009091046001600160a01b03169063c70fa00b906111839088908890879089908890600401613368565b60206040518083038186803b15801561119b57600080fd5b505afa1580156111af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d39190612e16565b6111ef5760405162461bcd60e51b8152600401610583906130f8565b611239565b7ff769f6bf659bbbdabf212d830720ce893eedc57f25ebb8e44edf5b300618a35b60016040516112249190613010565b60405180910390a16001805460ff1916811790555b7f4c0f499ffe6befa0ca7c826b0916cf87bea98de658013e76938489368d60d5098585848660405161126e949392919061334d565b60405180910390a15050505050565b600b805462ff0000198116620100009182900460ff1615909102179055565b600b5460ff1681565b60005b919050565b60015460ff1681565b600b54610100900460ff1681565b6003546001600160a01b03163314806112f557506112e061230f565b6001600160a01b0316336001600160a01b0316145b6113115760405162461bcd60e51b81526004016105839061322e565b6001600160a01b03811661132457600080fd5b600580546001600160a01b0319166001600160a01b0383161790556040517f2f202ddb4a2e345f6323ed90f8fc8559d770a7abbbeee84dde8aca3351fe715490610838908390612f9e565b6003546001600160a01b03163314806113a0575061138b61230f565b6001600160a01b0316336001600160a01b0316145b6113bc5760405162461bcd60e51b81526004016105839061322e565b6113c860008383612c88565b507f300e67d5a415b6d015a471d9c7b95dd58f3e8290af965e84e0f845de2996dda682826040516113fa92919061301b565b60405180910390a15050565b600b54600090610100900460ff166114305760405162461bcd60e51b8152600401610583906131d7565b6040516368288c2160e11b8152309063d051184290611459908590339081908190600401612fcc565b602060405180830381600087803b15801561147357600080fd5b505af1158015611487573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ab9190612d83565b92915050565b60095481565b600b546000906301000000900460ff1615611558576002546040516339ebf82360e01b81526001600160a01b03909116906339ebf823906114fc903090600401612f9e565b6101206040518083038186803b15801561151557600080fd5b505afa158015611529573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061154d9190612e9f565b60c0015190506107b3565b5060006107b3565b6003546001600160a01b0316331480611591575061157c61230f565b6001600160a01b0316336001600160a01b0316145b6115ad5760405162461bcd60e51b81526004016105839061322e565b60098190556040517fd94596337df4c2f0f44d30a7fc5db1c7bb60d9aca4185ed77c6fd96eb45ec29890610838908390613317565b60075481565b6004546001600160a01b031681565b600260009054906101000a90046001600160a01b03166001600160a01b03166388a8d6026040518163ffffffff1660e01b815260040160206040518083038186803b15801561164557600080fd5b505afa158015611659573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061167d9190612d83565b6001600160a01b0316336001600160a01b031614806116b4575061169f61230f565b6001600160a01b0316336001600160a01b0316145b6116d05760405162461bcd60e51b81526004016105839061322e565b7ff769f6bf659bbbdabf212d830720ce893eedc57f25ebb8e44edf5b300618a35b816040516116ff9190613010565b60405180910390a16001805460ff1916911515919091179055565b6005546001600160a01b031681565b60015461010090046001600160a01b031681565b600b805463ff00000019811663010000009182900460ff1615909102179055565b6003546001600160a01b031633148061178f575061177a61230f565b6001600160a01b0316336001600160a01b0316145b6117ab5760405162461bcd60e51b81526004016105839061322e565b6001600160a01b0381166117be57600080fd5b600380546001600160a01b0319166001600160a01b0383161790556040517f352ececae6d7d1e6d26bcf2c549dfd55be1637e9b22dc0cf3b71ddb36097a6b490610838908390612f9e565b6002546001600160a01b0316331461182057600080fd5b6002546040805163fbfa77cf60e01b815290516001600160a01b039283169284169163fbfa77cf916004808301926020929190829003018186803b15801561186757600080fd5b505afa15801561187b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061189f9190612d83565b6001600160a01b0316146118b257600080fd5b6118bb81611954565b6006546040516370a0823160e01b81526119549183916001600160a01b03909116906370a08231906118f1903090600401612f9e565b60206040518083038186803b15801561190957600080fd5b505afa15801561191d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119419190612f35565b6006546001600160a01b031691906123de565b50565b604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81523060601b601482018190526e5af43d82803e903d91602b57fd5bf360881b602883015260009160378184f0604051637c643b2f60e11b81529093506001600160a01b038416915063f8c8765e906119d5908990899089908990600401612fcc565b600060405180830381600087803b1580156119ef57600080fd5b505af1158015611a03573d6000803e3d6000fd5b50506040516001600160a01b03851692507f783540fb4221a3238720dc7038937d0d79982bcf895274aa6ad179f82cf0d53c9150600090a250949350505050565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b600b546301000000900460ff1681565b610bad81565b6003546001600160a01b03163314611aa65760405162461bcd60e51b81526004016105839061307d565b6001600160a01b038116611ab957600080fd5b6002546004805460405163095ea7b360e01b81526001600160a01b039384169363095ea7b393611af0939091169160009101612ff7565b602060405180830381600087803b158015611b0a57600080fd5b505af1158015611b1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b429190612e16565b50600480546001600160a01b0319166001600160a01b038381169190911780835560025460405163095ea7b360e01b81529083169363095ea7b393611b8d9316916000199101612ff7565b602060405180830381600087803b158015611ba757600080fd5b505af1158015611bbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bdf9190612e16565b507fafbb66abf8f3b719799940473a4052a3717cdd8e40fb6c8a3faadab316b1a069816040516108389190612f9e565b600080611c1b836107b3565b9050611c25612d06565b6002546040516339ebf82360e01b81526001600160a01b03909116906339ebf82390611c55903090600401612f9e565b6101206040518083038186803b158015611c6e57600080fd5b505afa158015611c82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ca69190612e9f565b9050806020015160001415611cc0576000925050506112a8565b60075460a0820151611cd39042906126f4565b1015611ce4576000925050506112a8565b60085460a0820151611cf79042906126f4565b10611d07576001925050506112a8565b6002546040805163bf3759b560e01b815290516000926001600160a01b03169163bf3759b5916004808301926020929190829003018186803b158015611d4c57600080fd5b505afa158015611d60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d849190612f35565b9050600a54811115611d9c57600193505050506112a8565b6000611da6611e99565b90508260c00151611dc2600a54836128b190919063ffffffff16565b1015611dd55760019450505050506112a8565b60008360c00151821115611df65760c0840151611df39083906126f4565b90505b6002546040805163112c1f9b60e01b815290516000926001600160a01b03169163112c1f9b916004808301926020929190829003018186803b158015611e3b57600080fd5b505afa158015611e4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e739190612f35565b9050611e7f81836128b1565b600954611e8c90886128d6565b1098975050505050505050565b6006546040516370a0823160e01b81526000916001600160a01b0316906370a0823190611eca903090600401612f9e565b60206040518083038186803b158015611ee257600080fd5b505afa158015611ef6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3c9190612f35565b6003546001600160a01b0316331480611f4b5750611f3661230f565b6001600160a01b0316336001600160a01b0316145b611f675760405162461bcd60e51b81526004016105839061322e565b60088190556040517f5430e11864ad7aa9775b07d12657fe52df9aa2ba734355bd8ef8747be2c800c590610838908390613317565b611fa884848484612910565b50505050565b600654611954906001600160a01b031633836123de565b6002546001600160a01b031681565b6003546001600160a01b03163314806120055750611ff061230f565b6001600160a01b0316336001600160a01b0316145b806120a65750600260009054906101000a90046001600160a01b03166001600160a01b031663452a93206040518163ffffffff1660e01b815260040160206040518083038186803b15801561205957600080fd5b505afa15801561206d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120919190612d83565b6001600160a01b0316336001600160a01b0316145b806121475750600260009054906101000a90046001600160a01b03166001600160a01b03166388a8d6026040518163ffffffff1660e01b815260040160206040518083038186803b1580156120fa57600080fd5b505afa15801561210e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121329190612d83565b6001600160a01b0316336001600160a01b0316145b6121635760405162461bcd60e51b81526004016105839061322e565b600b805460ff191660011790556002546040805163507257cd60e11b815290516001600160a01b039092169163a0e4af9a9160048082019260009290919082900301818387803b1580156121b657600080fd5b505af11580156121ca573d6000803e3d6000fd5b50506040517f97e963041e952738788b9d4871d854d282065b8f90a464928d6528f2e9a4fd0b925060009150a1565b8015806122815750604051636eb1769f60e11b81526001600160a01b0384169063dd62ed3e9061222f9030908690600401612fb2565b60206040518083038186803b15801561224757600080fd5b505afa15801561225b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061227f9190612f35565b155b61229d5760405162461bcd60e51b8152600401610583906132c1565b6122f38363095ea7b360e01b84846040516024016122bc929190612ff7565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612ad0565b505050565b60606123078484600085612b5f565b949350505050565b60025460408051635aa6e67560e01b815290516000926001600160a01b031691635aa6e675916004808301926020929190829003018186803b15801561235457600080fd5b505afa158015612368573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3c9190612d83565b60408051600180825281830190925260609182919060208083019080368337019050509050610bad816000815181106123c157fe5b6001600160a01b0390921660209283029190910190910152905090565b6122f38363a9059cbb60e01b84846040516024016122bc929190612ff7565b600b54600090819062010000900460ff161561251a576002546040516370a0823160e01b81526000916001600160a01b0316906370a0823190612444903090600401612f9e565b60206040518083038186803b15801561245c57600080fd5b505afa158015612470573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124949190612f35565b600254604051627b8a6760e11b81529192506001600160a01b03169062f714ce906124c59084903090600401613320565b602060405180830381600087803b1580156124df57600080fd5b505af11580156124f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125179190612f35565b50505b6002546040516339ebf82360e01b81526000916001600160a01b0316906339ebf8239061254b903090600401612f9e565b6101206040518083038186803b15801561256457600080fd5b505afa158015612578573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061259c9190612e9f565b60c001516006546040516370a0823160e01b81529192506000916001600160a01b03909116906370a08231906125d6903090600401612f9e565b60206040518083038186803b1580156125ee57600080fd5b505afa158015612602573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126269190612f35565b9050808511156126445792508261263d85826126f4565b9250612668565b808211156126645761265682826126f4565b925084831115612664578492505b8493505b5050915091565b6006546040516370a0823160e01b815260009182916001600160a01b03909116906370a08231906126a4903090600401612f9e565b60206040518083038186803b1580156126bc57600080fd5b505afa1580156126d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ab9190612f35565b600061273683836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612c23565b9392505050565b6006546040516370a0823160e01b81526000918291829182916001600160a01b03909116906370a0823190612776903090600401612f9e565b60206040518083038186803b15801561278e57600080fd5b505afa1580156127a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127c69190612f35565b6002546040516339ebf82360e01b81529192506000916001600160a01b03909116906339ebf823906127fc903090600401612f9e565b6101206040518083038186803b15801561281557600080fd5b505afa158015612829573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061284d9190612e9f565b60c0015190508582111561286f5785925061286882846126f4565b9150612876565b9091506000905b61288081846126f4565b90508082111561289b5761289482826126f4565b94506128a8565b6128a581836126f4565b93505b50509193909250565b6000828201838110156127365760405162461bcd60e51b8152600401610583906130c1565b6000826128e5575060006114ab565b828202828482816128f257fe5b04146127365760405162461bcd60e51b815260040161058390613155565b6006546001600160a01b0316156129395760405162461bcd60e51b81526004016105839061311e565b600280546001600160a01b0319166001600160a01b03868116919091179182905560408051637e062a3560e11b81529051929091169163fc0c546a91600480820192602092909190829003018186803b15801561299557600080fd5b505afa1580156129a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129cd9190612d83565b600680546001600160a01b0319166001600160a01b0392831617908190556129f99116856000196121f9565b600380546001600160a01b038086166001600160a01b03199283161790925560048054858416908316178082556005805486861694169390931790925560006007819055620151806008556064600955600a5560025460405163095ea7b360e01b81529084169363095ea7b393612a77939116916000199101612ff7565b602060405180830381600087803b158015612a9157600080fd5b505af1158015612aa5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ac99190612e16565b5050505050565b6060612b25826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166122f89092919063ffffffff16565b8051909150156122f35780806020019051810190612b439190612e16565b6122f35760405162461bcd60e51b815260040161058390613253565b6060612b6a85612c4f565b612b865760405162461bcd60e51b8152600401610583906131f7565b60006060866001600160a01b03168587604051612ba39190612f4d565b60006040518083038185875af1925050503d8060008114612be0576040519150601f19603f3d011682016040523d82523d6000602084013e612be5565b606091505b50915091508115612bf95791506123079050565b805115612c095780518082602001fd5b8360405162461bcd60e51b8152600401610583919061304a565b60008184841115612c475760405162461bcd60e51b8152600401610583919061304a565b505050900390565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590612307575050151592915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612cc95782800160ff19823516178555612cf6565b82800160010185558215612cf6579182015b82811115612cf6578235825591602001919060010190612cdb565b50612d02929150612d52565b5090565b6040518061012001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b5b80821115612d025760008155600101612d53565b600060208284031215612d78578081fd5b8135612736816133de565b600060208284031215612d94578081fd5b8151612736816133de565b60008060008060808587031215612db4578283fd5b8435612dbf816133de565b93506020850135612dcf816133de565b92506040850135612ddf816133de565b91506060850135612def816133de565b939692955090935050565b600060208284031215612e0b578081fd5b8135612736816133f3565b600060208284031215612e27578081fd5b8151612736816133f3565b60008060208385031215612e44578182fd5b823567ffffffffffffffff80821115612e5b578384fd5b818501915085601f830112612e6e578384fd5b813581811115612e7c578485fd5b866020828501011115612e8d578485fd5b60209290920196919550909350505050565b6000610120808385031215612eb2578182fd5b612ebb8161338b565b9050825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e08201526101008084015181830152508091505092915050565b600060208284031215612f2e578081fd5b5035919050565b600060208284031215612f46578081fd5b5051919050565b60008251612f5f8184602087016133b2565b9190910192915050565b60006c02a32b9ba29ba3930ba32b3bc9609d1b82528251612f9181600d8501602087016133b2565b91909101600d0192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03948516815292841660208401529083166040830152909116606082015260800190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b60006020825282602083015282846040840137818301604090810191909152601f909201601f19160101919050565b60006020825282518060208401526130698160408501602087016133b2565b601f01601f19169190910160400192915050565b6020808252600b908201526a085cdd1c985d1959da5cdd60aa1b604082015260600190565b602080825260059082015264085dd85b9d60da1b604082015260600190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b6020808252600c908201526b216865616c7468636865636b60a01b604082015260600190565b6020808252601c908201527f537472617465677920616c726561647920696e697469616c697a656400000000604082015260600190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6040820152607760f81b606082015260800190565b602080825260069082015265085d985d5b1d60d21b604082015260600190565b6020808252600790820152662173686172657360c81b604082015260600190565b60208082526006908201526521636c6f6e6560d01b604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252600b908201526a08585d5d1a1bdc9a5e995960aa1b604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b6020808252600a9082015269085c1c9bdd1958dd195960b21b604082015260600190565b60208082526036908201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60408201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b606082015260800190565b90815260200190565b9182526001600160a01b0316602082015260400190565b9283526020830191909152604082015260600190565b93845260208401929092526040830152606082015260800190565b948552602085019390935260408401919091526060830152608082015260a00190565b60405181810167ffffffffffffffff811182821017156133aa57600080fd5b604052919050565b60005b838110156133cd5781810151838201526020016133b5565b83811115611fa85750506000910152565b6001600160a01b038116811461195457600080fd5b801515811461195457600080fdfea2646970667358221220481a4888534cfa6787d33ef809067b163e547181d59789595cada508a427820764736f6c634300060c0033";

type TestStrategyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestStrategyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestStrategy__factory extends ContractFactory {
  constructor(...args: TestStrategyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _vault: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestStrategy> {
    return super.deploy(_vault, overrides || {}) as Promise<TestStrategy>;
  }
  override getDeployTransaction(
    _vault: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_vault, overrides || {});
  }
  override attach(address: string): TestStrategy {
    return super.attach(address) as TestStrategy;
  }
  override connect(signer: Signer): TestStrategy__factory {
    return super.connect(signer) as TestStrategy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestStrategyInterface {
    return new utils.Interface(_abi) as TestStrategyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestStrategy {
    return new Contract(address, _abi, signerOrProvider) as TestStrategy;
  }
}
